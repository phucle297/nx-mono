// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.6.1
//   protoc               v3.12.4
// source: create-product.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";

export const protobufPackage = "product";

export interface CreateProductRequest {
  name: string;
  description: string;
  price: number;
  stock: number;
}

export interface CreateProductResponse {
  id: string;
}

export const PRODUCT_PACKAGE_NAME = "product";

export interface CreateProductUsecaseClient {
  execute(request: CreateProductRequest): Observable<CreateProductResponse>;
}

export interface CreateProductUsecaseController {
  execute(
    request: CreateProductRequest,
  ): Promise<CreateProductResponse> | Observable<CreateProductResponse> | CreateProductResponse;
}

export function CreateProductUsecaseControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["execute"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("CreateProductUsecase", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("CreateProductUsecase", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const CREATE_PRODUCT_USECASE_SERVICE_NAME = "CreateProductUsecase";
